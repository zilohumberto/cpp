#include <iostream>
#include <algorithm>
#include <vector>
#include <stdio.h>
using namespace std;
#define FOR(i,a,b) for(int i=(a),_i=(b); i<_i; i++)
int M;
typedef pair<int, int> m;
bool compare(m const a,m const b){
	if(a.first==b.first){
		return a.second<b.second;
	}
	return a.first <b.first;
}
int main() {
	int N,li,ri;
	int cant,sec,ter;
	vector<int> lista_ans;
	vector<m> seg;
	cin>>N;
	while(N--){
		cant=0;
		cin>>M;
		seg.clear();
		while(cin>>li>>ri){
			if(li==0 && ri==0) break;
			if(ri<=0 || (li>M && ri>M)) continue;
			seg.push_back(make_pair(li,ri));
		}
		sort(seg.begin(),seg.end(),compare);
		lista_ans.clear();
		sec=0;ter=-1;
		int len=seg.size();
		int b=0;
		FOR(a,0,len){
			b=a;
			if((b<len) && (seg[b].first<=sec)){
				while(b<len && seg[b].first<=sec){
						if(ter>=0){
							if(seg[ter].second<seg[b].second)
								ter=b;
						}else
							ter=b;
					b++;
				}
				if(!lista_ans.empty() && (seg[ter].first >seg[lista_ans.back()].second)){
					break;
				}
				a=b-1;
				lista_ans.push_back(ter);
				cant++;
				sec = seg[ter].second;
				if(sec>=M) break;
				ter=-1;
			}
		}
		if(lista_ans.empty() || seg[lista_ans.back()].second<M)
			puts("0");
		else{
				int l=lista_ans.size();
				cout<<l<<endl;
				FOR(a,0,l){
						cout<<seg[lista_ans[a]].first<<" "<<seg[lista_ans[a]].second<<endl;
				}
		}
		if(N>0)
			cout<<endl;
	}
	return 0;
}

/*8

4092
-482 166
4461 7559
-277 1287
-465 7449
742 1638
2919 8657
3603 8123
-418 1739
872 4814
335 2494
1084 8493
1559 1891
4922 6669
887 4118
3031 4811
25 1735
724 4792
-391 -354
2848 8686
878 1862
5627 9421
5034 6580
3753 5108
353 7373
1497 4072
1157 2638
-382 -191
4324 5226
6304 6715
1176 1342
1443 6256
-362 705
-319 220
2381 4977
481 1648
2908 3431
4066 5207
1358 2815
3278 6180
338 8087
3571 4256
4851 7019
523 9456
1309 8392
470 5791
1090 1899
4038 4309
3042 7297
6156 7156
-432 1285
-292 3314
-154 4075
1446 2577
-381 3037
467 1279
2545 3212
5748 6051
5572 7449
4271 6678
-489 -473
1526 3425
7689 8717
3856 8231
3842 6464
1857 2489
1921 2042
-136 6667
1219 8525
-302 857
0 0

2703
-339 536
4412 5521
-396 -152
-403 -57
735 3013
856 6844
-239 1450
505 4725
4646 5777
602 2919
8371 9492
1688 8271
8853 8927
-470 -396
-166 -144
2499 6122
-287 1424
2603 4829
6687 8814
-435 5647
176 8445
1877 2466
1047 2254
5503 7426
5265 6230
2268 4146
-496 -493
1979 6082
-102 711
217 2420
547 1695
2780 5161
475 8034
5792 8593
2354 2613
0 0

2025
385 4581
2393 5154
2815 4032
157 2715
5886 7127
-35 185
2549 7128
-461 9271
5656 6155
0 0

3108
-89 787
3984 8819
1164 5609
-399 -129
765 5855
3209 3481
2920 3238
777 1473
3718 9066
2741 8086
3861 5251
2467 7029
1590 8740
553 4420
3238 8545
3112 4242
2360 2647
3776 6002
828 1028
-79 680
-41 120
700 5168
2031 4294
4519 4829
2329 5031
1395 3755
2898 5388
279 511
184 1286
-471 520
2188 6161
346 660
189 8377
-449 1266
284 385
2186 4137
5460 7604
469 1712
-72 148
2717 9460
-225 3658
63 3311
6541 8201
3645 4671
43 6603
2887 7167
395 507
7288 9422
6876 8690
0 0

2991
3795 4131
7126 7430
6467 6487
4430 7836
-138 -114
3834 6016
1803 4713
-176 4088
880 999
380 6602
3087 4504
6349 8216
5193 5797
181 4448
2229 6176
1086 4116
5903 7769
-64 6245
1931 4891
1574 5093
2862 5578
3581 6170
1450 1934
2909 3758
-469 -429
745 8385
1609 1978
0 0

3787
1883 2089
276 2816
-234 2524
4909 9127
2146 6328
3819 8750
3218 3654
-470 197
513 6451
460 3725
123 827
3328 5520
1084 5693
995 8674
1039 8355
-405 -352
6566 7546
8668 9264
353 3597
1808 4564
772 1612
4532 5346
5347 8655
671 2347
-306 -239
4902 7693
0 0

553
2020 5188
3750 4967
208 2618
-323 3673
3337 4320
2861 8931
8221 9138
-448 -176
-186 304
3707 8513
1484 8199
-206 2691
0 0

1976
1595 4468
191 890
3935 5231
3408 4468
3810 7789
4200 7722
532 7202
3908 4178
1446 3476
-442 160
107 8515
-237 2586
3769 3963
5973 8399
6904 9181
1604 6956
3576 6894
2735 7372
7066 8125
2004 2877
5494 6777
2855 8874
2711 6842
1122 7962
2758 4218
1296 1468
1306 2787
-127 3964
2049 2688
-271 4903
-315 5087
-440 -279
1043 3907
7458 8308
2065 3135
1682 5796
324 5985
5189 8093
4844 5573
7217 7347
3471 8379
-370 374
266 718
4574 9414
3067 4550
9248 9477
-418 378
655 5820
-272 493
164 518
-497 -486
0 0
*/
/*
7

1
-1 0
-5 -3
2 5
0 0

1
-1 0
0 1
0 0

10
-2 5
-1 6
-1 3
0 4
1 5
2 6
3 7
7 8
8 10
8 9
0 0

10
-2 5
-1 6
-1 3
0 4
1 5
2 6
3 7
8 10
8 9
0 0

10
2 5
5 3
2 3
2 5
0 0

10
0 10
0 10
0 0

6
0 2
2 4
4 6
6 8
0 0
*/
